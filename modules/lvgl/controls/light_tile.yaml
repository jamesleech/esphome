---
# Button properties for a Light Toggle
# vars:
# uid:
# text:
# icon:
# entity_id:
# isRGB:
# visible: true/false # TODO: the default hidden state

id: button_${uid}
hidden: "true"
on_short_click:
  - logger.log: "light tile button ${uid} clicked, toggling light ${entity_id}"
  - homeassistant.action:
      action: light.toggle
      data:
        entity_id: ${entity_id}
  - lvgl.widget.update:
      id: icon_${uid}
      hidden: true
  - lvgl.widget.update:
      id: spinner_${uid}
      hidden: false

on_long_press:
  - logger.log: "light tile button ${uid} long clicked, showing brightness for ${entity_id} RGB: ${isRGB}"
  - lambda: |-
      id(page_return) = lv_scr_act();  // Store the current page object so we can return to it
      id(light_colour_entity_id) = "${entity_id}";
      id(light_colour_entity_name) = "${text}";
  - lvgl.page.show: modal_light_colour_page

widgets:
  - obj:
      layout:
        type: flex
        flex_flow: COLUMN
      clickable: false # Disable click capture; events bubble to button
      widgets:
        - obj:
            layout:
              type: flex
              flex_flow: ROW
            clickable: false # Disable click capture; events bubble to button
            height: 30%
            widgets:
              - label:
                  id: icon_${uid}
                  text_font: $icon_font
                  align: top_left
                  text: ${icon}
                  clickable: false # Disable click capture; events bubble to button
              - spinner:
                  id: spinner_${uid}
                  <<: !include
                    file: ./icon_spinner.yaml
              - label:
                  id: label_${uid}
                  text_font: ${text_font}
                  align: bottom_left
                  text: ${text}
                  clickable: false # Disable click capture; events bubble to button
        - slider:
            id: slider_${uid}
            align: BOTTOM_MID
            width: 100%
            radius: 20px
            pad_left: 0
            pad_right: 0
            height: 30%
            min_value: 0
            max_value: 255
            indicator:
              radius: 20px
            # knob:
            # pad_left: -20px
            # pad_right: -20px
            # bg_color: white
            # bg_opa: TRANSP
            on_release:
              - logger.log:
                  format: "light tile button ${uid} slider, changing brightness %.0f for ${entity_id} RGB: ${isRGB}"
                  args: ["x"]
              - homeassistant.action:
                  action: light.turn_on
                  data:
                    entity_id: ${entity_id}
                    brightness: !lambda return int(x);
